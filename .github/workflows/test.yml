name: Test project

on:
  push:
    branches:
      - '6-test-action'
  pull_request:
    branches:
      - '6-test-action'
  schedule:
    - cron: '0 7 * * *'
  workflow_dispatch:

env:
  LOCALGOV_DRUPAL_PROJECT: localgovdrupal/localgov-project
  LOCALGOV_DRUPAL_PROJECT_PATH:

jobs:
  build:
    name: Install LocalGov Drupal
    runs-on: ubuntu-latest
    env:
      COMPOSER_EXIT_ON_PATCH_FAILURE: '1'

    strategy:
      fail-fast: false
      matrix:
        localgov-version:
          - '3.x'
        drupal-version:
          - '~10.0'
        php-version:
          - '8.1'
          - '8.2'
          - '8.3'

    steps:
      - name: Cached workspace
        uses: actions/cache@v4
        with:
          path: ./html
          key: localgov-build-${{ matrix.localgov-version }}-${{ matrix.drupal-version }}-${{ matrix.php-version }}-${{ github.run_id }}-${{ secrets.CACHE_VERSION }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Check out project
        uses: actions/checkout@v4
        with:
          path: html

      - name: Install composer dependencies
        uses: php-actions/composer@v6

  phpcs:
    name: Coding standards checks
    needs: build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        localgov-version:
          - '3.x'
        drupal-version:
          - '~10.0'
        php-version:
          - '8.3'

    steps:
      - name: Cached workspace
        uses: actions/cache@v4
        with:
          path: ./html
          key: localgov-build-${{ matrix.localgov-version }}-${{ matrix.drupal-version }}-${{ matrix.php-version }}-${{ github.run_id }}-${{ secrets.CACHE_VERSION }}
          restore-keys: |
            localgov-build-${{ matrix.localgov-version }}-${{ matrix.drupal-version }}-${{ matrix.php-version }}-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Run coding standards checks
        run: |
          cd html
          ./bin/phpcs -p ${LOCALGOV_DRUPAL_PROJECT_PATH}

  phpstan:
    name: Static analysis checks
    needs: build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        localgov-version:
          - '3.x'
        drupal-version:
          - '~10.0'
        php-version:
          - '8.3'

    steps:
      - name: Cached workspace
        uses: actions/cache@v4
        with:
          path: ./html
          key: localgov-build-${{ matrix.localgov-version }}-${{ matrix.drupal-version }}-${{ matrix.php-version }}-${{ github.run_id }}-${{ secrets.CACHE_VERSION }}
          restore-keys: |
            localgov-build-${{ matrix.localgov-version }}-${{ matrix.drupal-version }}-${{ matrix.php-version }}-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Run PHPStan code checks
        run: |
          cd html
          ./bin/phpstan analyse -c ./phpstan.neon ./web/modules/contrib/localgov* ./web/profiles/contrib/localgov* ./web/themes/contrib/localgov*
  phpunit:
    name: PHPUnit tests
    needs: build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        localgov-version:
          - '3.x'
        drupal-version:
          - '~10.0'
        php-version:
          - '8.1'
          - '8.2'
          - '8.3'

    steps:
      - name: Clone Drupal container
        uses: actions/checkout@v4
        with:
          repository: localgovdrupal/drupal-container
          ref: php${{ matrix.php-version }}

      - name: Cached workspace
        uses: actions/cache@v4
        with:
          path: ./html
          key: localgov-build-${{ matrix.localgov-version }}-${{ matrix.drupal-version }}-${{ matrix.php-version }}-${{ github.run_id }}-${{ secrets.CACHE_VERSION }}
          restore-keys: |
            localgov-build-${{ matrix.localgov-version }}-${{ matrix.drupal-version }}-${{ matrix.php-version }}-

      - name: Start Docker environment
        run: docker compose -f docker-compose.yml up -d

      - name: Run PHPUnit tests
        run: |
          mkdir -p ./html/web/sites/simpletest && chmod 777 ./html/web/sites/simpletest
          docker exec -t drupal bash -c 'chown docker:docker -R /var/www/html'
          docker exec -u docker -t drupal bash -c "cd /var/www/html && ./bin/paratest --processes=4"
